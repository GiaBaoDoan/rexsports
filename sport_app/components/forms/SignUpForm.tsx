"use client";

import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { z } from "zod";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Card,
  CardContent,
  CardHeader,
  CardFooter,
  CardTitle,
} from "@/components/ui/card";
import Link from "next/link";
import useAsyncAction from "@/hooks/useAsyncAction";
import { SignupThunk } from "@/store/thunk/signup";

const formSchema = z
  .object({
    email: z.string().email({ message: "Email kh√¥ng h·ª£p l·ªá" }),
    name: z.string().min(1, { message: "Kh√¥ng ƒë·ªÉ tr·ªëng th√¥ng tin" }),
    password: z
      .string()
      .min(8, { message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±" })
      .regex(/[A-Z]/, { message: "M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt ch·ªØ hoa" })
      .regex(/[a-z]/, { message: "M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt ch·ªØ th∆∞·ªùng" })
      .regex(/[0-9]/, { message: "M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt s·ªë" })
      .regex(/[@$!%*?&]/, {
        message: "M·∫≠t kh·∫©u ph·∫£i ch·ª©a √≠t nh·∫•t m·ªôt k√Ω t·ª± ƒë·∫∑c bi·ªát",
      }),
    confirmPassword: z.string(),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: "M·∫≠t kh·∫©u kh√¥ng kh·ªõp",
    path: ["confirmPassword"],
  });

export type formType = z.infer<typeof formSchema>;

export function SignupForm() {
  const form = useForm<formType>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      email: "",
      name: "",
      password: "",
    },
  });

  const { execute, isLoading } = useAsyncAction();

  const onSubmit = (data: formType) => {
    const { email, name, password } = data;
    execute({
      actionCreator: () => SignupThunk({ email, name, password }),
    });
  };

  return (
    <Card className="w-[400px] mx-auto mt-10 p-4 shadow-lg rounded-xl">
      <CardHeader className="text-center">
        <CardTitle className="text-3xl font-medium">üîê T·∫°o t√†i kho·∫£n</CardTitle>
        <p className="text-gray-600 text-xs font-light">
          Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi
          <span className="text-red-600 font-bold italic">Rexsports</span>
        </p>
      </CardHeader>
      <CardContent>
        <Form {...form}>
          <form className="space-y-4" onSubmit={form.handleSubmit(onSubmit)}>
            <FormField
              control={form.control}
              name="email"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Email</FormLabel>
                  <FormControl>
                    <Input placeholder="Email" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="name"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>H·ªç t√™n</FormLabel>
                  <FormControl>
                    <Input placeholder="H·ªç t√™n" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="password"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>M·∫≠t kh·∫©u</FormLabel>
                  <FormControl>
                    <Input type="password" placeholder="*****" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="confirmPassword"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>X√°c nh·∫≠n m·∫≠t kh·∫©u</FormLabel>
                  <FormControl>
                    <Input type="password" placeholder="*****" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
            <Button disabled={isLoading} type="submit" className="w-full">
              ƒêƒÉng k√Ω
            </Button>
          </form>
        </Form>
      </CardContent>
      <CardFooter className="text-xs justify-center">
        <Link href="/auth/login" className="text-red-600 hover:underline ml-1">
          <span>Quay l·∫°i trang ƒëƒÉng nh·∫≠p</span>
        </Link>
      </CardFooter>
    </Card>
  );
}
